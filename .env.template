# ALL SERVICES ARE CONFIGURED HERE. 
# You can use these defaults, or BYO services to fit your needs.
# The defaults should work 'out of the box' without any changes.
# ⚠️ For Security, we recommend changing all variables marked with CHANGE ME.

# OpenAI key is REQUIRED for Embeddings during ingest & RAG retrieval
OPENAI_API_KEY=  # ⚠️ CHANGE ME

# Qdrant Vector DB
QDRANT_URL=qdrant:6333 # container name
QDRANT_COLLECTION_NAME=uiuc-chat	
QDRANT_API_KEY=your-strong-key-here # ⚠️ CHANGE ME

# Object Storage: You can use either Minio or S3. Choose one, not both. Minio is used by default.
MINIO_URL=http://minio:9001 # You MUST comment this out if using AWS S3.
AWS_ACCESS_KEY_ID=minioadmin # ⚠️ CHANGE ME
AWS_SECRET_ACCESS_KEY=minioadmin # ⚠️ CHANGE ME
S3_BUCKET_NAME=uiuc-chat

# For SQL, you have 3 options: Supabase, Postgres, or SQLite. Choose only one. 
# Self-hosted Supabase is used by default, see here for more info on self hosted Supabase: https://supabase.com/docs/guides/self-hosting

# DEFAULT SQL: Supabase
# TODO: FIGURE OUT THE DEFAULTS HERE
# SUPABASE_USER=
# SUPABASE_PASSWORD=
# SUPABASE_URL=

# Or, bring your own Postgres (from outside this repo):
POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password  # Must match Supabase's password
POSTGRES_HOST=supabase-db
POSTGRES_PORT=5432
POSTGRES_DB=postgres
POSTGRES_USER=postgres

# Or, use SQLite. I'm a huge fan of SQLite:
# SQLITE_DB_NAME=uiuc-chat-backend-sqlite.db

# Ingest queue state is managed by Redis
INGEST_REDIS_HOST=redis # container name
INGEST_REDIS_PORT=6379
INGEST_REDIS_PASSWORD=your-strong-password-here # ⚠️ CHANGE ME

# Main backend Flask app
FLASK_PORT=8000

# Optional services. Adds functionality if you want it, but not necessary.	
# NOMIC_API_KEY=	
# POSTHOG_API_KEY=	
# SENTRY_DSN=	
# EMAIL_SENDER=	
# N8N_URL=	

# REQUIRED OPENAI KEY
VLADS_OPENAI_KEY=""


MINIO_URL=http://minio:9001  # matches the docker-compose minio service
AWS_ACCESS_KEY_ID=minioadmin  # ensure these match your minio credentials
AWS_SECRET_ACCESS_KEY=minioadmin
NEXT_PUBLIC_S3_ENDPOINT=http://localhost:9001
S3_BUCKET_NAME=uiuc-chat
AWS_REGION="us-east-1"
AWS_SECRET=""

# Replace ${INGEST_REDIS_PASSWORD} with your actual local Redis password if needed.
INGEST_REDIS_PASSWORD=your-strong-password-here # ⚠️ CHANGE ME
KV_URL="redis://default:${INGEST_REDIS_PASSWORD}@redis:6379"
# If you're running PostHog locally, adjust the host (otherwise leave as is).
NEXT_PUBLIC_POSTHOG_HOST="http://localhost:6006"
NEXT_PUBLIC_POSTHOG_KEY=""

NEXT_PUBLIC_SIGNING_KEY=""

# Ollama: if running locally, update the URL. Otherwise, leave it.
OLLAMA_SERVER_URL="http://localhost:11434"

QDRANT_API_KEY=""
QDRANT_COLLECTION_NAME="uiuc-chat"
QDRANT_URL="http://qdrant:6333/"

# Use the local Flask backend (flask-app) running on port 8000.
RAILWAY_URL="http://flask-app:8000"

# For additional caching (if needed) point to your local Redis container.
REDIS_URL="redis://default:${INGEST_REDIS_PASSWORD}@redis:6379"
REDIS_PASSWORD="${INGEST_REDIS_PASSWORD}"

# Connect to your locally running Supabase (using the port mapping from Kong).
# If your frontend can access the internal network directly, you might use "http://kong:8000" instead.
SUPABASE_SECRET=""
SUPABASE_URL="http://localhost:8000"


# Keycloak auth (must match the keycloak service in docker-compose.yaml, and backend .env)
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin
KC_HOSTNAME=keycloak
